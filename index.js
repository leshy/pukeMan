// Generated by LiveScript 1.3.1
(function(){
  var h, _, rndName, Context, e_number, e_var, e_plus, e_function, context;
  h = require('helpers');
  _ = require('underscore');
  rndName = function(){
    return h.rndid(5);
  };
  Context = (function(){
    Context.displayName = 'Context';
    var prototype = Context.prototype, constructor = Context;
    function Context(expressions){
      true;
      this.expressions = expressions;
    }
    prototype.expression = function(){};
    return Context;
  }());
  e_number = function(){
    return String(h.RandomInt(1000));
  };
  e_var = function(context){
    var name, val;
    name = rndName();
    val = ("var " + name + " = ") + context.expression();
    context.push(name);
    return val;
  };
  e_plus = function(context){
    return context.expresion() + " + " + context.expresion();
  };
  e_function = function(e){
    var name, val;
    name = rndName();
    val = "function " + name + " {";
    return e.depth++;
  };
  e_function = function(context){
    var name, removeExpression;
    name = rndName();
    context.depth++;
    removeExpression = addExpression(context, function(){
      context.depth--;
      removeExpression();
      context.push(name + "();");
      return "\n};\n";
    });
    return "\nfunction " + name + "() {\nreturn " + context.expression() + "\n};\n";
  };
  context = {
    expressions: [e_var, e_plus, e_number, e_function],
    depth: 0
  };
  console.log(expression(context));
  console.log(expression(context));
  console.log(expression(context));
  console.log(expression(context));
}).call(this);
